name: Run tests

on: workflow_call

jobs:
  run-tests:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Add Poetry to path
        run: |
          echo "PATH=~/.local/share/pypoetry/venv/bin:${PATH}" >> $GITHUB_ENV

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ vars.PYTHON_VERSION }}

      - name: Cache Poetry
        id: cache-poetry
        uses: actions/cache@v4
        env:
          cache-name: cache-poetry
        with:
          path: |
            ~/.local/share/pypoetry
          key: >
            ${{ runner.os }}-${{ env.cache-name }}

      - name: Cache Poetry packages
        id: cache-poetry-packages
        uses: actions/cache@v4
        env:
          cache-name: cache-poetry-packages
        with:
          path: |
            ~/.cache/pypoetry
          key: >
            ${{ runner.os }}-${{ env.cache-name }}-${{ vars.PYTHON_VERSION }}
            -${{ hashFiles('**/pyproject.toml') }}

      - if: ${{ steps.cache-poetry.outputs.cache-hit != 'true' }}
        name: Install Poetry if not cached
        run: |
          curl -sSL https://install.python-poetry.org | python3 -

      - if: ${{ steps.cache-poetry-packages.outputs.cache-hit != 'true' }}
        name: Install dependencies if not cached
        run: |
          poetry install --no-root --with test

      - name: Build with PyInstaller
        run: |
          poetry run ruff check --exit-zero --statistics
      - name: Build with PyInstaller
        run: |
          poetry run pytest
